on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*.*.*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Publish release asset

jobs:
  build:
    runs-on: windows-latest
    steps:
       - name: Test
         run: echo ${{ github.ref }}

#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Create the product
#        run: dotnet publish -p:PublishProfile=Properties/PublishProfiles/FolderProfile.pubxml
#
#      - name: Create zip
#        run: |
#            compress-archive `
#              -Path * `
#              -DestinationPath release.zip
#        working-directory: buildme/bin/Release/Publish
#        shell: pwsh
#
#        #      - name: Create Release
#        #id: create_release
#        #uses: actions/create-release@v1
#        #env:
#        #  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        #with:
#        #  tag_name: ${{ github.ref }}
#        #  release_name: Release ${{ github.ref }}
#        #  draft: false
#        #  prerelease: false
#
#      - name: Upload Release Asset
#        id: upload-release-asset 
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: release.zip
#          asset_name: buildme.release-${{ github.ref }}.zip
#          asset_content_type: application/zip
